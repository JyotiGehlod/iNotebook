{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactWithGit\\\\inotebook\\\\src\\\\context\\\\notes\\\\NoteState.js\",\n  _s = $RefreshSig$();\nimport NoteContext from './nodeContext';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteStatus = props => {\n  _s();\n  const host = 'http://localhost:5000';\n  const noteInitial = [];\n  const [notes, setNotes] = useState(noteInitial);\n\n  // add note \n  const getNotes = async () => {\n    const response = await fetch(`${host}/api/notes/fetchallusers`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": lo\n      }\n    });\n    const json = await response.json();\n    //console.log(json);\n    setNotes(json);\n  };\n\n  //add note \n  const addNote = async (title, description, tag) => {\n    const response = await fetch(`${host}/api/notes/addnote`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": lo\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const note = await response.json();\n    setNotes(notes.concat(note));\n  };\n\n  //delete note \n  const deleteNote = async id => {\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": lo\n      }\n    });\n    const json = response.json();\n    const newNotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newNotes);\n  };\n\n  // edit note\n  const editNote = async (id, title, description, tag) => {\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": lo\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = await response.json();\n    let newNotes = JSON.parse(JSON.stringify(notes));\n    // Logic to edit in client\n    for (let index = 0; index < newNotes.length; index++) {\n      const element = newNotes[index];\n      if (element._id === id) {\n        newNotes[index].title = title;\n        newNotes[index].description = description;\n        newNotes[index].tag = tag;\n        break;\n      }\n    }\n    setNotes(newNotes);\n  };\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      addNote,\n      deleteNote,\n      editNote,\n      getNotes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteStatus, \"vS+yqGJfAcVJ8XYDTXAd5OCG4B0=\");\n_c = NoteStatus;\nexport default NoteStatus;\nvar _c;\n$RefreshReg$(_c, \"NoteStatus\");","map":{"version":3,"names":["NoteContext","useState","jsxDEV","_jsxDEV","NoteStatus","props","_s","host","noteInitial","notes","setNotes","getNotes","response","fetch","method","headers","lo","json","addNote","title","description","tag","body","JSON","stringify","note","concat","deleteNote","id","newNotes","filter","_id","editNote","parse","index","length","element","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/ReactWithGit/inotebook/src/context/notes/NoteState.js"],"sourcesContent":["import NoteContext from './nodeContext';\r\nimport { useState } from 'react';\r\n\r\nconst NoteStatus = (props) => {\r\n  const host = 'http://localhost:5000';\r\n  const noteInitial = [];\r\n  const [notes, setNotes] = useState(noteInitial);\r\n\r\n // add note \r\n  const getNotes = async() => {\r\n    const response = await fetch(`${host}/api/notes/fetchallusers`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\"  : lo\r\n      }\r\n    });\r\n\r\n    const json = await response.json();\r\n    //console.log(json);\r\n    setNotes(json);\r\n\r\n  }\r\n\r\n\r\n  //add note \r\n  const addNote = async (title, description, tag) => {\r\n    \r\n    \r\n    const response = await fetch(`${host}/api/notes/addnote`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\"  : lo\r\n      },      body: JSON.stringify({title, description, tag}),\r\n\r\n    });\r\n    \r\n    const note = await response.json();\r\n    setNotes(notes.concat(note))\r\n  }\r\n\r\n    //delete note \r\n  const deleteNote = async(id) => {\r\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\"  : lo\r\n      },\r\n    });\r\n    const json = response.json();\r\n    \r\n    const newNotes = notes.filter((note) => { return note._id !== id })\r\n    setNotes(newNotes);\r\n  }\r\n\r\n  // edit note\r\n  const editNote = async (id, title, description, tag) => {\r\n\r\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\"  : lo\r\n      },\r\n      body: JSON.stringify({title, description, tag}),\r\n    });\r\n    const json = await response.json();\r\n    \r\n\r\n     let newNotes = JSON.parse(JSON.stringify(notes));\r\n    // Logic to edit in client\r\n    for (let index = 0; index < newNotes.length; index++) {\r\n      const element = newNotes[index];\r\n      if (element._id === id) {\r\n\r\n        newNotes[index].title = title;\r\n        newNotes[index].description = description;\r\n        newNotes[index].tag = tag; \r\n        break;\r\n      }\r\n    } \r\n    setNotes(newNotes);\r\n  }\r\n\r\n  return (\r\n    <NoteContext.Provider value={{ notes, addNote, deleteNote, editNote, getNotes }}>\r\n      {props.children}\r\n    </NoteContext.Provider>\r\n  )\r\n}\r\n\r\n\r\nexport default NoteStatus;\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,eAAe;AACvC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC5B,MAAMC,IAAI,GAAG,uBAAuB;EACpC,MAAMC,WAAW,GAAG,EAAE;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAACO,WAAW,CAAC;;EAEhD;EACC,MAAMG,QAAQ,GAAG,MAAAA,CAAA,KAAW;IAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,IAAK,0BAAyB,EAAE;MAC9DO,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,YAAY,EAAIC;MAClB;IACF,CAAC,CAAC;IAEF,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC;IACAP,QAAQ,CAACO,IAAI,CAAC;EAEhB,CAAC;;EAGD;EACA,MAAMC,OAAO,GAAG,MAAAA,CAAOC,KAAK,EAAEC,WAAW,EAAEC,GAAG,KAAK;IAGjD,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,IAAK,oBAAmB,EAAE;MACxDO,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,YAAY,EAAIC;MAClB,CAAC;MAAOM,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACL,KAAK;QAAEC,WAAW;QAAEC;MAAG,CAAC;IAExD,CAAC,CAAC;IAEF,MAAMI,IAAI,GAAG,MAAMb,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClCP,QAAQ,CAACD,KAAK,CAACiB,MAAM,CAACD,IAAI,CAAC,CAAC;EAC9B,CAAC;;EAEC;EACF,MAAME,UAAU,GAAG,MAAMC,EAAE,IAAK;IAC9B,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,IAAK,yBAAwBqB,EAAG,EAAC,EAAE;MACjEd,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,YAAY,EAAIC;MAClB;IACF,CAAC,CAAC;IACF,MAAMC,IAAI,GAAGL,QAAQ,CAACK,IAAI,CAAC,CAAC;IAE5B,MAAMY,QAAQ,GAAGpB,KAAK,CAACqB,MAAM,CAAEL,IAAI,IAAK;MAAE,OAAOA,IAAI,CAACM,GAAG,KAAKH,EAAE;IAAC,CAAC,CAAC;IACnElB,QAAQ,CAACmB,QAAQ,CAAC;EACpB,CAAC;;EAED;EACA,MAAMG,QAAQ,GAAG,MAAAA,CAAOJ,EAAE,EAAET,KAAK,EAAEC,WAAW,EAAEC,GAAG,KAAK;IAEtD,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,IAAK,yBAAwBqB,EAAG,EAAC,EAAE;MACjEd,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,YAAY,EAAIC;MAClB,CAAC;MACDM,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACL,KAAK;QAAEC,WAAW;QAAEC;MAAG,CAAC;IAChD,CAAC,CAAC;IACF,MAAMJ,IAAI,GAAG,MAAML,QAAQ,CAACK,IAAI,CAAC,CAAC;IAGjC,IAAIY,QAAQ,GAAGN,IAAI,CAACU,KAAK,CAACV,IAAI,CAACC,SAAS,CAACf,KAAK,CAAC,CAAC;IACjD;IACA,KAAK,IAAIyB,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGL,QAAQ,CAACM,MAAM,EAAED,KAAK,EAAE,EAAE;MACpD,MAAME,OAAO,GAAGP,QAAQ,CAACK,KAAK,CAAC;MAC/B,IAAIE,OAAO,CAACL,GAAG,KAAKH,EAAE,EAAE;QAEtBC,QAAQ,CAACK,KAAK,CAAC,CAACf,KAAK,GAAGA,KAAK;QAC7BU,QAAQ,CAACK,KAAK,CAAC,CAACd,WAAW,GAAGA,WAAW;QACzCS,QAAQ,CAACK,KAAK,CAAC,CAACb,GAAG,GAAGA,GAAG;QACzB;MACF;IACF;IACAX,QAAQ,CAACmB,QAAQ,CAAC;EACpB,CAAC;EAED,oBACE1B,OAAA,CAACH,WAAW,CAACqC,QAAQ;IAACC,KAAK,EAAE;MAAE7B,KAAK;MAAES,OAAO;MAAES,UAAU;MAAEK,QAAQ;MAAErB;IAAS,CAAE;IAAA4B,QAAA,EAC7ElC,KAAK,CAACkC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAE3B,CAAC;AAAArC,EAAA,CAxFKF,UAAU;AAAAwC,EAAA,GAAVxC,UAAU;AA2FhB,eAAeA,UAAU;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}