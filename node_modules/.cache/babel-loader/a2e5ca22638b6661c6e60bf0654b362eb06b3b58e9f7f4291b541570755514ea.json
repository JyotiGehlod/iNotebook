{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactWithGit\\\\inotebook\\\\src\\\\context\\\\notes\\\\NoteState.js\",\n  _s = $RefreshSig$();\nimport NoteContext from './nodeContext';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteStatus = props => {\n  _s();\n  const host = 'http://localhost:5000';\n  const noteInitial = [];\n  const [notes, setNotes] = useState(noteInitial);\n\n  // add note \n  const getNotes = async () => {\n    const response = await fetch(`${host}/api/notes/fetchallusers`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY1MTc1ODJkOTdkYjYyNGI1OTdkYTQzIn0sImlhdCI6MTcxNjY5ODY5NH0.2-EggWghfZ_X4-dP_G-g9gk3VmN-nBw7JcR0Ck4Xkws\"\n      }\n    });\n    const json = await response.json();\n    //console.log(json);\n    setNotes(json);\n  };\n\n  //add note \n  // const addNote = async (title, description, tag) => {\n\n  //   const response = await fetch(`${host}/api/notes/addnote`, {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       \"auth-token\"  : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY1MTc1ODJkOTdkYjYyNGI1OTdkYTQzIn0sImlhdCI6MTcxNjY5ODY5NH0.2-EggWghfZ_X4-dP_G-g9gk3VmN-nBw7JcR0Ck4Xkws\"\n  //     },      body: JSON.stringify({title, description, tag}),\n\n  //   });\n\n  //   const note = {\n  //     \"_id\": \"61322f119553781a8ca8d0e08\",\n  //     \"user\": \"6131dc5e3e4037cd4734a0664\",\n  //     \"title\": title,\n  //     \"description\": description,\n  //     \"tag\": tag,\n  //     \"date\": \"2021-09-03T14:20:09.668Z\",\n  //     \"__v\": 0\n  //   };\n  //   setNotes(notes.concat(note))\n  // }\n\n  //delete note \n  const deleteNote = async id => {\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY1MTc1ODJkOTdkYjYyNGI1OTdkYTQzIn0sImlhdCI6MTcxNjY5ODY5NH0.2-EggWghfZ_X4-dP_G-g9gk3VmN-nBw7JcR0Ck4Xkws\"\n      }\n    });\n    const json = response.json();\n    const newNotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newNotes);\n  };\n\n  // edit note\n  const editNote = async (id, title, description, tag) => {\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY1MTc1ODJkOTdkYjYyNGI1OTdkYTQzIn0sImlhdCI6MTcxNjY5ODY5NH0.2-EggWghfZ_X4-dP_G-g9gk3VmN-nBw7JcR0Ck4Xkws\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = await response.json();\n    let newNotes = JSON.parse(JSON.stringify(notes));\n    // Logic to edit in client\n    for (let index = 0; index < newNotes.length; index++) {\n      const element = newNotes[index];\n      if (element._id === id) {\n        newNotes[index].title = title;\n        newNotes[index].description = description;\n        newNotes[index].tag = tag;\n        break;\n      }\n    }\n    setNotes(newNotes);\n  };\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      addNote,\n      deleteNote,\n      editNote,\n      getNotes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteStatus, \"vS+yqGJfAcVJ8XYDTXAd5OCG4B0=\");\n_c = NoteStatus;\nexport default NoteStatus;\nvar _c;\n$RefreshReg$(_c, \"NoteStatus\");","map":{"version":3,"names":["NoteContext","useState","jsxDEV","_jsxDEV","NoteStatus","props","_s","host","noteInitial","notes","setNotes","getNotes","response","fetch","method","headers","json","deleteNote","id","newNotes","filter","note","_id","editNote","title","description","tag","body","JSON","stringify","parse","index","length","element","Provider","value","addNote","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/ReactWithGit/inotebook/src/context/notes/NoteState.js"],"sourcesContent":["import NoteContext from './nodeContext';\r\nimport { useState } from 'react';\r\n\r\nconst NoteStatus = (props) => {\r\n  const host = 'http://localhost:5000';\r\n  const noteInitial = [];\r\n  const [notes, setNotes] = useState(noteInitial);\r\n\r\n // add note \r\n  const getNotes = async() => {\r\n    const response = await fetch(`${host}/api/notes/fetchallusers`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\"  : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY1MTc1ODJkOTdkYjYyNGI1OTdkYTQzIn0sImlhdCI6MTcxNjY5ODY5NH0.2-EggWghfZ_X4-dP_G-g9gk3VmN-nBw7JcR0Ck4Xkws\"\r\n      }\r\n    });\r\n\r\n    const json = await response.json();\r\n    //console.log(json);\r\n    setNotes(json);\r\n\r\n  }\r\n\r\n\r\n  //add note \r\n  // const addNote = async (title, description, tag) => {\r\n    \r\n    \r\n  //   const response = await fetch(`${host}/api/notes/addnote`, {\r\n  //     method: \"POST\",\r\n  //     headers: {\r\n  //       \"Content-Type\": \"application/json\",\r\n  //       \"auth-token\"  : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY1MTc1ODJkOTdkYjYyNGI1OTdkYTQzIn0sImlhdCI6MTcxNjY5ODY5NH0.2-EggWghfZ_X4-dP_G-g9gk3VmN-nBw7JcR0Ck4Xkws\"\r\n  //     },      body: JSON.stringify({title, description, tag}),\r\n\r\n  //   });\r\n    \r\n  //   const note = {\r\n  //     \"_id\": \"61322f119553781a8ca8d0e08\",\r\n  //     \"user\": \"6131dc5e3e4037cd4734a0664\",\r\n  //     \"title\": title,\r\n  //     \"description\": description,\r\n  //     \"tag\": tag,\r\n  //     \"date\": \"2021-09-03T14:20:09.668Z\",\r\n  //     \"__v\": 0\r\n  //   };\r\n  //   setNotes(notes.concat(note))\r\n  // }\r\n\r\n\r\n  //delete note \r\n  const deleteNote = async(id) => {\r\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\"  : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY1MTc1ODJkOTdkYjYyNGI1OTdkYTQzIn0sImlhdCI6MTcxNjY5ODY5NH0.2-EggWghfZ_X4-dP_G-g9gk3VmN-nBw7JcR0Ck4Xkws\"\r\n      },\r\n    });\r\n    const json = response.json();\r\n    \r\n    const newNotes = notes.filter((note) => { return note._id !== id })\r\n    setNotes(newNotes);\r\n  }\r\n\r\n  // edit note\r\n  const editNote = async (id, title, description, tag) => {\r\n\r\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\"  : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY1MTc1ODJkOTdkYjYyNGI1OTdkYTQzIn0sImlhdCI6MTcxNjY5ODY5NH0.2-EggWghfZ_X4-dP_G-g9gk3VmN-nBw7JcR0Ck4Xkws\"\r\n      },\r\n      body: JSON.stringify({title, description, tag}),\r\n    });\r\n    const json = await response.json();\r\n    \r\n\r\n     let newNotes = JSON.parse(JSON.stringify(notes));\r\n    // Logic to edit in client\r\n    for (let index = 0; index < newNotes.length; index++) {\r\n      const element = newNotes[index];\r\n      if (element._id === id) {\r\n\r\n        newNotes[index].title = title;\r\n        newNotes[index].description = description;\r\n        newNotes[index].tag = tag; \r\n        break;\r\n      }\r\n    } \r\n    setNotes(newNotes);\r\n  }\r\n\r\n  return (\r\n    <NoteContext.Provider value={{ notes, addNote, deleteNote, editNote, getNotes }}>\r\n      {props.children}\r\n    </NoteContext.Provider>\r\n  )\r\n}\r\n\r\n\r\nexport default NoteStatus;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}