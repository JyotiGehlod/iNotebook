{"ast":null,"code":"// import NoteContext from './nodeContext';\n// import { useState } from 'react';\n\n// const NoteStatus = (props) => {\n//   const host = 'http://localhost:5000';\n//   const noteInitial = [];\n//const [notes, setNotes] = useState(notesInitial)\n//   add note \n//   const getNotes = async() => {\n//     const response = await fetch(`${host}/api/notes/fetchallusers`, {\n//       method: \"GET\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"auth-token\"  : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY1MTc1ODJkOTdkYjYyNGI1OTdkYTQzIn0sImlhdCI6MTcxNjY5ODY5NH0.2-EggWghfZ_X4-dP_G-g9gk3VmN-nBw7JcR0Ck4Xkws\"\n//       }\n//     });\n\n//     const json = await response.json();\n//     console.log(json);\n//     setNotes(json);\n\n//   }\n\n//   const [notes, setNotes] = useState(noteInitial);\n//   //add note \n//   const addNote = async (title, description, tag) => {\n\n//     const response = await fetch(`${host}/api/notes/addnote`, {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"auth-token\"  : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY1MTc1ODJkOTdkYjYyNGI1OTdkYTQzIn0sImlhdCI6MTcxNjY5ODY5NH0.2-EggWghfZ_X4-dP_G-g9gk3VmN-nBw7JcR0Ck4Xkws\"\n//       },      body: JSON.stringify({title, description, tag}),\n\n//     });\n//     // const json = await response.json();\n//     // console.log(json)\n\n//     console.log(\"Adding a new note\");\n\n//     const note = {\n//       \"_id\": \"61322f119553781a8ca8d0e08\",\n//       \"user\": \"6131dc5e3e4037cd4734a0664\",\n//       \"title\": title,\n//       \"description\": description,\n//       \"tag\": tag,\n//       \"date\": \"2021-09-03T14:20:09.668Z\",\n//       \"__v\": 0\n//     };\n//     setNotes(notes.concat(note))\n//   }\n//   //delete note \n//   const deleteNote = async(id) => {\n//     const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\n//       method: \"DELETE\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"auth-token\"  : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY1MTc1ODJkOTdkYjYyNGI1OTdkYTQzIn0sImlhdCI6MTcxNjY5ODY5NH0.2-EggWghfZ_X4-dP_G-g9gk3VmN-nBw7JcR0Ck4Xkws\"\n//       },\n//     });\n//     const json = response.json();\n//     console.log(json);\n\n//     console.log(\"delete this particular id \" + id);\n//     const newNotes = notes.filter((note) => { return note._id !== id })\n//     setNotes(newNotes);\n//   }\n\n//   // edit note\n//   const editNote = async (id, title, description, tag) => {\n\n//     const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n//       method: \"PUT\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"auth-token\"  : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY1MTc1ODJkOTdkYjYyNGI1OTdkYTQzIn0sImlhdCI6MTcxNjY5ODY5NH0.2-EggWghfZ_X4-dP_G-g9gk3VmN-nBw7JcR0Ck4Xkws\"\n//       },\n//       body: JSON.stringify({title, description, tag}),\n//     });\n//     const json = response.json();\n//     console.log(json);\n\n//     let newNotes = JSON.parse(JSON.stringify(notes));\n//     // Logic to edit in client\n//     for (let index = 0; index < newNotes.length; index++) {\n//       const element = newNotes[index];\n//       if (element._id === id) {\n//         newNotes[index].title = title;\n//         newNotes[index].description = description;\n//         newNotes[index].tag = tag; \n//         break; \n\n//         //   if (title !== undefined) {\n//         //     newNotes[index].title = title;\n//         // }\n//         //  else if (description !== undefined) {\n//         //       newNotes[index].description = description;\n//         //   }\n//         //   else if (tag !== undefined) {\n//         //       newNotes[index].tag = tag;\n//         //   }\n//         //   break;\n//       }\n//     }  \n//     setNotes(newNotes);\n\n//   }  \n//   return (\n//     <NoteContext.Provider value={{ notes, addNote, deleteNote, editNote, getNotes }}>\n//       {props.children}\n//     </NoteContext.Provider>\n//   )\n// }\n\n// export default NoteStatus;","map":{"version":3,"names":[],"sources":["D:/ReactWithGit/inotebook/src/context/notes/NoteState.js"],"sourcesContent":["// import NoteContext from './nodeContext';\r\n// import { useState } from 'react';\r\n\r\n// const NoteStatus = (props) => {\r\n//   const host = 'http://localhost:5000';\r\n//   const noteInitial = [];\r\n//const [notes, setNotes] = useState(notesInitial)\r\n//   add note \r\n//   const getNotes = async() => {\r\n//     const response = await fetch(`${host}/api/notes/fetchallusers`, {\r\n//       method: \"GET\",\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//         \"auth-token\"  : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY1MTc1ODJkOTdkYjYyNGI1OTdkYTQzIn0sImlhdCI6MTcxNjY5ODY5NH0.2-EggWghfZ_X4-dP_G-g9gk3VmN-nBw7JcR0Ck4Xkws\"\r\n//       }\r\n//     });\r\n\r\n//     const json = await response.json();\r\n//     console.log(json);\r\n//     setNotes(json);\r\n\r\n//   }\r\n\r\n\r\n//   const [notes, setNotes] = useState(noteInitial);\r\n//   //add note \r\n//   const addNote = async (title, description, tag) => {\r\n    \r\n    \r\n//     const response = await fetch(`${host}/api/notes/addnote`, {\r\n//       method: \"POST\",\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//         \"auth-token\"  : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY1MTc1ODJkOTdkYjYyNGI1OTdkYTQzIn0sImlhdCI6MTcxNjY5ODY5NH0.2-EggWghfZ_X4-dP_G-g9gk3VmN-nBw7JcR0Ck4Xkws\"\r\n//       },      body: JSON.stringify({title, description, tag}),\r\n\r\n//     });\r\n//     // const json = await response.json();\r\n//     // console.log(json)\r\n    \r\n//     console.log(\"Adding a new note\");\r\n\r\n//     const note = {\r\n//       \"_id\": \"61322f119553781a8ca8d0e08\",\r\n//       \"user\": \"6131dc5e3e4037cd4734a0664\",\r\n//       \"title\": title,\r\n//       \"description\": description,\r\n//       \"tag\": tag,\r\n//       \"date\": \"2021-09-03T14:20:09.668Z\",\r\n//       \"__v\": 0\r\n//     };\r\n//     setNotes(notes.concat(note))\r\n//   }\r\n//   //delete note \r\n//   const deleteNote = async(id) => {\r\n//     const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\r\n//       method: \"DELETE\",\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//         \"auth-token\"  : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY1MTc1ODJkOTdkYjYyNGI1OTdkYTQzIn0sImlhdCI6MTcxNjY5ODY5NH0.2-EggWghfZ_X4-dP_G-g9gk3VmN-nBw7JcR0Ck4Xkws\"\r\n//       },\r\n//     });\r\n//     const json = response.json();\r\n//     console.log(json);\r\n\r\n//     console.log(\"delete this particular id \" + id);\r\n//     const newNotes = notes.filter((note) => { return note._id !== id })\r\n//     setNotes(newNotes);\r\n//   }\r\n\r\n//   // edit note\r\n//   const editNote = async (id, title, description, tag) => {\r\n\r\n//     const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n//       method: \"PUT\",\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//         \"auth-token\"  : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY1MTc1ODJkOTdkYjYyNGI1OTdkYTQzIn0sImlhdCI6MTcxNjY5ODY5NH0.2-EggWghfZ_X4-dP_G-g9gk3VmN-nBw7JcR0Ck4Xkws\"\r\n//       },\r\n//       body: JSON.stringify({title, description, tag}),\r\n//     });\r\n//     const json = response.json();\r\n//     console.log(json);\r\n\r\n//     let newNotes = JSON.parse(JSON.stringify(notes));\r\n//     // Logic to edit in client\r\n//     for (let index = 0; index < newNotes.length; index++) {\r\n//       const element = newNotes[index];\r\n//       if (element._id === id) {\r\n//         newNotes[index].title = title;\r\n//         newNotes[index].description = description;\r\n//         newNotes[index].tag = tag; \r\n//         break; \r\n\r\n//         //   if (title !== undefined) {\r\n//         //     newNotes[index].title = title;\r\n//         // }\r\n//         //  else if (description !== undefined) {\r\n//         //       newNotes[index].description = description;\r\n//         //   }\r\n//         //   else if (tag !== undefined) {\r\n//         //       newNotes[index].tag = tag;\r\n//         //   }\r\n//         //   break;\r\n//       }\r\n//     }  \r\n//     setNotes(newNotes);\r\n     \r\n//   }  \r\n//   return (\r\n//     <NoteContext.Provider value={{ notes, addNote, deleteNote, editNote, getNotes }}>\r\n//       {props.children}\r\n//     </NoteContext.Provider>\r\n//   )\r\n// }\r\n\r\n// export default NoteStatus;\r\n\r\n\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}